# =========================
# My-brew-app-V2 (Play 2.9)
# =========================

# --- Modules
play.modules.enabled += "modules.BindingsModule"
play.modules.enabled += "play.api.db.slick.SlickModule"

# --- Filtres & Sécurité
play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"

# ⚠️ CSP en UNE SEULE LIGNE (pas de triple quotes)
play.filters.headers.contentSecurityPolicy = "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self'; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self'; base-uri 'self'; form-action 'self'"

# Hôtes (dev). En prod, remplace par ton FQDN.
play.filters.hosts.allowed = ["."]
# ex prod :
# play.filters.hosts.allowed = ["hopfinder.example.com"]

# --- DB (Slick + Hikari)
slick.dbs.default.profile = "slick.jdbc.PostgresProfile$"

# Valeurs par défaut (dev local)
slick.dbs.default.db {
  driver    = "org.postgresql.Driver"
  url       = "jdbc:postgresql://localhost:5432/appli_brassage"
  user      = "postgres"
  password  = "postgres"
  numThreads = 16
  queueSize  = 1024
  connectionTimeout = 30000
}

# Overrides optionnels par variables d'environnement (si présentes)
slick.dbs.default.db.driver   = ${?DB_DRIVER}
slick.dbs.default.db.url      = ${?JDBC_DATABASE_URL}
slick.dbs.default.db.user     = ${?DB_USER}
slick.dbs.default.db.password = ${?DB_PASSWORD}

# --- Evolutions
play.evolutions.enabled   = true
play.evolutions.autoApply = true

# --- Divers
play.http.parser.maxMemoryBuffer = 512k
play.i18n.langs = ["fr"]

logger.root        = INFO
logger.play        = INFO
logger.application = INFO

# Secret (dev) ; en prod, injecte via PLAY_SECRET (≥ 256 bits)
play.http.secret.key = "NPsX>5[m/R<=NYzqPwTQ78ZS9Mle?:oPAFpyIz<6?FaTy7m1S[5P@YBzMg@Ok=IU"
play.http.secret.key = ${?PLAY_SECRET}

# Exonérer les endpoints JSON de l'API des vérifs CSRF (POST/PATCH/DELETE)
play.filters.csrf {
  bypass {
    routes = [
      { method = "POST",   path = "/api/.*" }
      { method = "PUT",    path = "/api/.*" }
      { method = "PATCH",  path = "/api/.*" }
      { method = "DELETE", path = "/api/.*" }
    ]
  }
}
