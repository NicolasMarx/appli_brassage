#!/bin/bash

# =============================================================================
# CORRECTION √âVOLUTION SQL
# =============================================================================

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîß Correction de l'√©volution SQL${NC}"
echo ""

# Localiser le fichier d'√©volution
EVOLUTION_FILE=""
if [ -f "conf/evolutions/default/1.sql" ]; then
    EVOLUTION_FILE="conf/evolutions/default/1.sql"
elif [ -f "conf/evolutions/1.sql" ]; then
    EVOLUTION_FILE="conf/evolutions/1.sql"
else
    echo -e "${RED}‚ùå Fichier d'√©volution SQL non trouv√©${NC}"
    echo "Recherche dans:"
    find . -name "*.sql" -path "*/evolutions/*" 2>/dev/null || echo "Aucun fichier SQL d'√©volution trouv√©"
    exit 1
fi

echo -e "${GREEN}‚úÖ Fichier trouv√©: $EVOLUTION_FILE${NC}"

# Sauvegarder le fichier original
cp "$EVOLUTION_FILE" "$EVOLUTION_FILE.backup"
echo -e "${GREEN}‚úÖ Sauvegarde cr√©√©e: $EVOLUTION_FILE.backup${NC}"

# Afficher la ligne probl√©matique
echo ""
echo -e "${BLUE}üîç Ligne probl√©matique (autour de la ligne 147):${NC}"
grep -n -A2 -B2 "NEW.updated_at = NOW()" "$EVOLUTION_FILE" || echo "Pattern non trouv√©"

echo ""
echo -e "${BLUE}üîß Correction de la syntaxe SQL...${NC}"

# Correction 1: Ajouter le point-virgule manquant apr√®s NOW()
sed -i.bak 's/NEW\.updated_at = NOW()/NEW.updated_at = NOW();/' "$EVOLUTION_FILE" 2>/dev/null || \
sed -i 's/NEW\.updated_at = NOW()/NEW.updated_at = NOW();/' "$EVOLUTION_FILE"

# V√©rifier que la correction a √©t√© appliqu√©e
if grep -q "NEW.updated_at = NOW();" "$EVOLUTION_FILE"; then
    echo -e "${GREEN}‚úÖ Correction appliqu√©e: Point-virgule ajout√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  La correction automatique n'a pas fonctionn√©${NC}"
    echo "Ligne √† corriger manuellement:"
    echo "OLD: NEW.updated_at = NOW()"
    echo "NEW: NEW.updated_at = NOW();"
fi

# Supprimer les fichiers .bak
rm -f "$EVOLUTION_FILE.bak" 2>/dev/null || true

# V√©rifier la syntaxe g√©n√©rale
echo ""
echo -e "${BLUE}üîç V√©rification syntaxe SQL...${NC}"

# Compter les $$ pour s'assurer qu'ils sont √©quilibr√©s
DOLLAR_COUNT=$(grep -o '\$\$' "$EVOLUTION_FILE" | wc -l)
if [ $((DOLLAR_COUNT % 2)) -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Quotes dollar (\$\$) √©quilibr√©es: $DOLLAR_COUNT${NC}"
else
    echo -e "${RED}‚ùå Quotes dollar (\$\$) non √©quilibr√©es: $DOLLAR_COUNT${NC}"
fi

# V√©rifier la structure g√©n√©rale
echo ""
echo -e "${BLUE}üìã Structure du fichier d'√©volution:${NC}"
echo "   # --- !Ups: $(grep -c "# --- !Ups" "$EVOLUTION_FILE")"
echo "   # --- !Downs: $(grep -c "# --- !Downs" "$EVOLUTION_FILE")"
echo "   CREATE TABLE: $(grep -c "CREATE TABLE" "$EVOLUTION_FILE")"
echo "   CREATE FUNCTION: $(grep -c "CREATE.*FUNCTION" "$EVOLUTION_FILE")"

# Ajouter section !Downs si manquante
if ! grep -q "# --- !Downs" "$EVOLUTION_FILE"; then
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Section !Downs manquante, ajout...${NC}"
    
    cat >> "$EVOLUTION_FILE" << 'DOWNS_EOF'

# --- !Downs

-- Suppression dans l'ordre inverse de cr√©ation
DROP TRIGGER IF EXISTS update_admins_updated_at ON admins;
DROP FUNCTION IF EXISTS update_updated_at_column();
DROP TABLE IF EXISTS audit_logs;
DROP TABLE IF EXISTS admins;
DROP TABLE IF EXISTS beer_styles;
DROP TABLE IF EXISTS aroma_profiles;
DROP TABLE IF EXISTS origins;
DROP EXTENSION IF EXISTS "uuid-ossp";
DOWNS_EOF
    
    echo -e "${GREEN}‚úÖ Section !Downs ajout√©e${NC}"
fi

echo ""
echo -e "${BLUE}üß™ Test de validation de l'√©volution...${NC}"

# Marquer l'√©volution comme r√©solue via l'API Play
echo "Tentative de r√©solution automatique de l'√©volution..."

# Option 1: Via curl si l'application tourne
if curl -s "http://localhost:9000/@evolutions/resolve/default/1" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ √âvolution marqu√©e comme r√©solue via API${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  L'application doit √™tre red√©marr√©e pour appliquer la correction${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Correction de l'√©volution SQL termin√©e !${NC}"
echo ""
echo -e "${BLUE}Prochaines √©tapes:${NC}"
echo "1. Red√©marrez l'application Play:"
echo "   Arr√™tez sbt (Entr√©e), puis: sbt run"
echo ""
echo "2. Ou marquez l'√©volution comme r√©solue manuellement:"
echo "   http://localhost:9000/@evolutions"
echo ""
echo "3. Testez l'API ensuite:"
echo "   curl http://localhost:9000/api/v1/hops"
echo ""

echo -e "${BLUE}üìÅ Fichiers:${NC}"
echo "   ‚Ä¢ Original sauv√©: $EVOLUTION_FILE.backup"
echo "   ‚Ä¢ Corrig√©: $EVOLUTION_FILE"